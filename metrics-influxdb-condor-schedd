#!/usr/bin/python

import re
import httplib
import socket
from datetime import datetime, timedelta
import requests
from ConfigParser import SafeConfigParser
from random import randint

# Read from config file
parser = SafeConfigParser()
try:
   parser.read('/usr/local/etc/influxdb-htcondor.conf')
   host = parser.get('db', 'host')
   database = parser.get('db', 'database')
   username = parser.get('auth', 'username')
   password = parser.get('auth', 'password')
except:
   raise NameError('Unable to read from config file')

logfile='/var/log/condor/ShadowLog'

timeformat='%m/%d/%y %H:%M'
delta=timedelta(minutes=-1)
now=datetime.now()
then=now+delta
timeString=then.strftime(timeformat)

counts = {}

f=open(logfile)
for line in f:
   if timeString in line and 'EXITING WITH STATUS' in line:
      pieces = line.split()
      rc = pieces[12]
      if not counts.has_key(rc):
         counts[rc] = 0
      counts[rc] += 1
f.close()

data = ''
for status in counts:
   data += 'shadow_exit_status,status=' + str(status) + ',host=' + socket.gethostname() + ' value=' + str(counts[status]) + '\n'

# Send to InfluxDB - if multiple hosts are defined, pick a random host. If this fails,
# repeat until we have success
hosts = host.split(',')
success = False
while not success:
   pick = randint(0,len(hosts)-1)
   statuscode = 0
   try:
      r = requests.post('http://'+hosts[pick]+'/write?db='+database, auth=(username, password), data=data, timeout=40)
      statuscode = r.status_code
   except:
      print 'ERROR: Problem connecting to',hosts[pick]
   if statuscode == 204:
      success = True
   else:
      hosts.remove(hosts[pick])
      if len(hosts) == 0:
         raise NameError('Unable to send metrics to InfluxDB')
