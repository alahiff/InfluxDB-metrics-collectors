#!/usr/bin/python

import sys
import socket
from subprocess import Popen, PIPE
from re import split
import requests
from ConfigParser import SafeConfigParser
from random import randint

# Read from config file
parser = SafeConfigParser()
try:
   parser.read('/usr/local/etc/influxdb-fts3.conf')
   host = parser.get('db', 'host')
   database = parser.get('db', 'database')
   username = parser.get('auth', 'username')
   password = parser.get('auth', 'password')
except:
   raise NameError('Unable to read from config file')

hostname = socket.gethostname().split('.')[0]

volist = {}

sub_proc = Popen(['ps', 'aux'], shell=False, stdout=PIPE)
sub_proc.stdout.readline()
for line in sub_proc.stdout:
   if 'fts_url_copy' in line:
      line = line[:-1]
      proc_info = split(" *", line)
      if 'gmetric' not in line:
         vo = proc_info[proc_info.index('--vo')+1]
         if vo in volist:
            volist[vo] += 1
         else:
            volist[vo] = 1

data = ''
for vo in volist:
   data += 'active_transfers,host='+hostname+',instance=test,vo='+vo+' value='+str(volist[vo])+'\n'

# Send to InfluxDB - if multiple hosts are defined, pick a random host. If this fails,
# repeat until we have success
hosts = host.split(',')
success = False
while not success:
   pick = randint(0,len(hosts)-1)
   statuscode = 0
   try:
      r = requests.post('http://'+hosts[pick]+'/write?db='+database, auth=(username, password), data=data, timeout=40)
      statuscode = r.status_code
   except:
      print 'ERROR: Problem connecting to',hosts[pick]
   if statuscode == 204:
      success = True
   else:
      hosts.remove(hosts[pick])
      if len(hosts) == 0:
         raise NameError('Unable to send metrics to InfluxDB')
         
