#!/usr/bin/python

import classad
import htcondor

coll = htcondor.Collector()

# Number of collectors
results = coll.query(htcondor.AdTypes.Collector, "true", ["Name"])
numCollectors = len(results)
data = 'NumCollectors value=' + str(numCollectors) + '\n'

# Negotiator
results = coll.query(htcondor.AdTypes.Negotiator, "true", ["Name", "LastNegotiationCycleDuration0", "RecentDaemonCoreDutyCycle"])
numNegotiators = len(results)
data += 'NumNegotiators value=' + str(numNegotiators) + '\n'

for result in results:
   data += 'NegotiatorRecentDaemonCoreDutyCycle,host=' + result["Name"] + ' value=' + str(result["RecentDaemonCoreDutyCycle"]) + '\n'
   data += 'LastNegotiationCycleDuration,host=' + result["Name"] + ' value=' + str(result["LastNegotiationCycleDuration0"]) + '\n'

# Schedds
results = coll.query(htcondor.AdTypes.Schedd, "true", ["Name", "RecentDaemonCoreDutyCycle", "Autoclusters", "RecentJobsStarted", "RecentJobsExited", "RecentJobsSubmitted", "RecentJobsKilled", "RecentStatsLifetime"])
numSchedds = len(results)
data += 'NumSchedds value=' + str(numSchedds) + '\n'

for result in results:
   data += 'ScheddRecentDaemonCoreDutyCycle,host=' + result["Name"] + ' value=' + str(result["RecentDaemonCoreDutyCycle"]) + '\n'
   data += 'AutoClusters,host=' + result["Name"] + ' value=' + str(result["Autoclusters"]) + '\n'

   lifetime = result["RecentStatsLifetime"]
   recentJobsStarted = 0
   recentJobsExited = 0
   recentJobsSubmitted = 0
   recentJobsKilled = 0

   if lifetime > 0:
      recentJobsStarted = result["RecentJobsStarted"]*60.0/lifetime
      recentJobsExited = result["RecentJobsExited"]*60.0/lifetime
      recentJobsSubmitted = result["RecentJobsSubmitted"]*60.0/lifetime
      recentJobsKilled = result["RecentJobsKilled"]*60.0/lifetime
      data += 'RecentJobs,host=' + result["Name"] + ' Started=' + str(recentJobsStarted) + ',Exited=' + str(recentJobsExited) + ',Submitted=' + str(recentJobsSubmitted) + ',Killed=' + str(recentJobsKilled) + '\n'

# Startds
numStartds = 0
numGoodStartds = 0
memoryUsed = 0
memoryFree = 0
cpuUsed = 0
cpuFree = 0
cpusUseable = 0
cpuUsedCloud = 0
cpuFreeCloud = 0
cpuUsedMesos = 0
cpuFreeMesos = 0
numStartdsPreemptableOnly = 0

results = coll.query(htcondor.AdTypes.Startd, "PartitionableSlot=?=True", ["NODE_IS_HEALTHY", "StartJobs", "TotalCpus", "Cpus", "TotalMemory", "Memory","Machine","PREEMPTABLE_ONLY", "MESOS_TASK_ID"])
for result in results:
   cpuUsed += result["TotalCpus"] - result["Cpus"]
   cpuFree += result["Cpus"]
   cpusUseable += result["TotalCpus"] - result["Cpus"]
   memoryUsed += result["TotalMemory"] - result["Memory"]
   memoryFree += result["Memory"]
   numStartds += 1
   if "NODE_IS_HEALTHY" in result and "StartJobs" in result:
      if result["NODE_IS_HEALTHY"] == True and result["StartJobs"] == True:
         numGoodStartds += 1
         cpusUseable += result["Cpus"]

   if "Machine" in result:
      if "nubes" in result["Machine"]:
         cpuUsedCloud += result["TotalCpus"] - result["Cpus"]
         cpuFreeCloud += result["Cpus"]
      if "MESOS_TASK_ID" in result:
         cpuUsedMesos += result["TotalCpus"] - result["Cpus"]
         cpuFreeMesos += result["Cpus"]

   if "PREEMPTABLE_ONLY" in result:
      if result["PREEMPTABLE_ONLY"]:
         numStartdsPreemptableOnly += 1

data += 'NumCpusUsed value=' + str(cpuUsed) + '\n'
data += 'NumCpusFree value=' + str(cpuFree) + '\n'
data += 'NumCpusUseable value=' + str(cpusUseable) + '\n'
data += 'NumMemoryUsed value=' + str(memoryUsed) + '\n'
data += 'NumMemoryFree value=' + str(memoryFree) + '\n'
data += 'NumStartds value=' + str(numStartds) + '\n'
data += 'NumGoodStartds value=' + str(numGoodStartds) + '\n'
data += 'NumCpusUsedCloud value=' + str(cpuUsedCloud) + '\n'
data += 'NumCpusFreeCloud value=' + str(cpuFreeCloud) + '\n'
data += 'NumCpusUsedMesos value=' + str(cpuUsedMesos) + '\n'
data += 'NumCpusFreeMesos value=' + str(cpuFreeMesos) + '\n'
data += 'NumStartdsPreemptableOnly value=' + str(numStartdsPreemptableOnly) + '\n'

if cpuUsed + cpuFree > 0:
   cpuUsedPercent = float(cpuUsed)*100/(cpuUsed + cpuFree)
   cpuUseablePercent = float(cpusUseable)*100/(cpuUsed + cpuFree)
else:
   cpuUsedPercent = 0
   cpuUseablePercent = 0

if cpusUseable > 0:
   cpuUsedPercentGood = float(cpuUsed)*100/cpusUseable
else:
   cpuUsedPercentGood = 0

data += 'cpus numUsed=' + str(int(cpuUsed)) + ',' + \
        'numFree=' + str(cpuFree) + ',' + \
        'numTotal=' + str(int(cpuFree+cpuUsed)) + ',' + \
        'numTotalUseable=' + str(int(cpusUseable)) + ',' + \
        'percentUsed=' + str(cpuUsedPercent) + ',' + \
        'percentUseable=' + str(cpuUseablePercent) + ',' + \
        'percentUsedOfUseable=' + str(cpuUsedPercentGood) + '\n'

print data
